<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<title>IT 122 Homepage</title>
<script src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

<!-- Don't use this in production: -->
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
<div id="root"></div>
<script type="text/babel">

const divStyle = {
  color: 'White',
  backgroundColor: 'Green',
};

const cars = [
  {"name": "Ford", "model": "Focus"},
  {"name": "BMW", "model": "3 Series"},
  {"name": "Volvo", "model": "XC90"},
  {"name": "Volkswagen", "model": "Golf"},
  {"name": "Toyota", "model": "Camry"},
];

const ListItems = (props) => {
  const listItems = props.items.map((item) => (
    <li key={item.name} onClick={props.clickHandler}>{item.name}</li>
  ));
  return <ul>{listItems}</ul>;
}

const Detail = (props) => {
  const clearForm = () => {
    props.changeHandler(null); // Clear selectedItem
  };

  return (
    <div>
      <h3>Car Details</h3>
      {props.item && (
        <form>
          <b>Name</b>:{" "}
          <input
            type="text"
            name="name"
            onChange={props.changeHandler}
            value={props.item.name || ''}
          />
          <b>Model</b>:{" "}
          <input
            type="text"
            name="model"
            onChange={props.changeHandler}
            value={props.item.model || ''}
          />
          <button type="button" onClick={clearForm}>Clear</button>
        </form>
      )}
    </div>
  );
}

// This is the parent component
const MyApp = () => {
  const [items, setItems] = React.useState(cars);
  const [selectedItem, setSelectedItem] = React.useState();

  const itemClicked = (e) => {
    let found = cars.find((item) => item.name === e.target.innerText);
    setSelectedItem(found);
  }

  const itemChanged = (e) => {
    if (selectedItem) {
      let field = e.target.name;
      let newItem = { ...selectedItem };
      newItem[field] = e.target.value;

      let newItems = items.map(item => (item.name === newItem.name ? newItem : item));
      setItems(newItems);
      setSelectedItem(newItem);
    }
  }

  return (
    <div>
      <h2>Car description!</h2>
      <ListItems items={items} clickHandler={itemClicked} />
      <hr />
      <Detail item={selectedItem} changeHandler={itemChanged} />
    </div>
  )
}

const container = document.getElementById('root');
const root = ReactDOM.createRoot(container);
root.render(<MyApp />);

</script>
</body>
</html>
